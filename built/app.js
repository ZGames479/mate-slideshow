"use strict";
/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const MRE = __importStar(require("@microsoft/mixed-reality-extension-sdk"));
/**
 * The main class of this app. All the logic goes here.
 */
class MyHelloWorld {
    constructor(context) {
        this.context = context;
        this.kitObjectIds = ['2023381067649516374']; /*['2018534096317186743','2018555068038512912','2018554823057605609',
                                '2018555067115766027','2018555065807143171','2018554966586687590',
                                '2018555066327236870','2018554914283716644','2018555067249983756',
                                '2018554840749179891','2018555067510030605','2018554923720900647',
                                '2018555066595672328','2018555068424388883','2018555067770077455',
                                '2018554986115367048','2018554849406223352','2018554803268879326',
                                '2018554814014686181','2018555066067190020','2018555066201407749',
                                '2018555004989735078','2018555065547096321','2018555066989936906',
                                '2018554976149700726','2018555033955598553','2018554832234742766',
                                '2018555043527000297','2018555060430045435','2018555065412878590',
                                '2018555065152831741','2018554858314925052','2018555066855719177',
                                '2018555052309872885','2018555066461454599','2018554867492061186',
                                '2018554886232211472','2018554876795027466','2018554895803613205',
                                '2018554957149503572','2018554933158084651','2018554947838148676',
                                '2018554904846532635','2018555068298559762','2018555024778461383',
                                '2018555067644248334','2018555015081230518','2018555065672925442',
                                '2018555068164342033','2019196113893982224','2019195942841877384',
                                '2019196425455272318','2019195984390652837','2019196238934573285',
                                '2019196406840951140','2019196427812471174','2019196430698152346',
                                '2019196431092416924','2019196428466782602','2019196316403368230',
                                '2019196431226634654','2019196329380544814','2019196423618167153',
                                '2019195955559007123','2019196165928517684','2019196424666743161',
                                '2019196428601000331','2019196290843279644','2019196424800960890',
                                '2019196425061007739','2019196425983754624','2019196429909623188',
                                '2019196424272478581','2019196424012431731','2019196423752384882',
                                '2019196428340953481','2019196101176852490','2019196426763895171',
                                '2019196425195225468','2019196431352463775','2019196343012032824',
                                '2019196423358120303','2019196062245323741','2019196426243801473',
                                '2019195917416006521','2019196430958199195','2019196381280862546',
                                '2019196430303887767','2019196428080906632','2019196355989209412',
                                '2018554995418333334','2019196429255311761','2019196430563934617',
                                '2019196423492338032','2019196426503848322','2019196368437903692',
                                '2019196009556476849','2019196036299359183','2019196424146649460',
                                '2019196430438105496','2019196074962453478','2019195968133530520',
                                '2019196393997992277','2019196303686238496','2019196126736941080',
                                '2019196427158159748','2019196423098073454','2019196429389529490',
                                '2019195996713517995','2019196049276535764','2019196425321054589',
                                '2019196252045967617','2019196278260367636','2019196211545768105',
                                '2019196023187964872','2019196264888926475','2019196428735218060',
                                '2019196424540914040','2019195930258965377','2019196193845805179',
                                '2019196179694223446','2019196428995264909','2019196088199676912',
                                '2019196225043038406','2019196419423863147','2019196429129482638',
                                '2019196139714117661','2019196429515358611','2019196425715319167',
                                '2019196427418206597','2019196152817123369'];*/
        this.assets = null;
        this.context.onStarted(() => this.started(this.getId()));
        setInterval(this.timerFunction.bind(this), 15000, this);
    }
    started(id) {
        // set up somewhere to store loaded assets (meshes, textures, animations, gltfs, etc.)
        this.assets = new MRE.AssetContainer(this.context);
        this.kitObject = MRE.Actor.CreateFromLibrary(this.context, {
            resourceId: 'artifact:' + id,
            actor: {
                transform: {
                    local: {
                        position: { x: 0, y: 0, z: 0 }
                    }
                }
            }
        });
        this.kitObject.appearance.enabled = true;
        // for (const id of this.kitObjectIds){
        // 	this.kitObjects.push(MRE.Actor.CreateFromLibrary(this.context,{
        // 		resourceId: 'artifact:' + id,
        // 		actor: {
        // 			transform:{
        // 				local: {
        // 					position: { x: 0, y: 0, z: 0 }
        // 				}
        // 			}
        // 		}
        // 	}));
        // 	this.kitObjects[this.activeModel].appearance.enabled = true;
        // 	await this.delay(15000);
        // 	this.kitObjects[this.activeModel].appearance.enabled = false;
        // 	++this.activeModel;
        // 	if(this.activeModel === this.kitObjects.length){ this.activeModel = 0; }
        // }
    }
    getId() {
        const random = Math.floor(Math.random() * (this.kitObjectIds.length + 1) - 1);
        return this.kitObjectIds[random];
    }
    timerFunction(that) {
        that.kitObject.destroy();
        that.started(that.getId());
    }
}
exports.default = MyHelloWorld;
//# sourceMappingURL=app.js.map